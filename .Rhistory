?sum
for ( x in 1:10)
print(X)
for ( x in 1:10)
print(x)
for ( x in 1:10){}
for ( x in 1:10){
print(x)
}
repeat{}
repeat{
print("Yello")
}
library()
library(ggplot2)
library()
library(tidyverse)
install.packages(c("nycflights13", "gapminder", "Lahman"))
install.packages(c("nycflights13", "gapminder", "Lahman"))
library(tidyverse)
mpg
view(mpg)
ggpot2(data = mpg)
ggplot2(data = mpg)
ggplot(data = mpg)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
nrow(mpg)
ncol(mpg)
nrow(mtcars)
ncol(mtcars)
attributes(mtcars)
attr(mtcar, nrow)
attr(mtcars, nrow)
?mpg
ggplot(mpg) + geom_point(mapping = aes(hwy,cyl))
ggplot(mpg) + geom_point(mapping = aes(y = hwy,x = cyl))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = cyl))
ggplot(data = mpg) + geom_point(mapping = aes(y = class,x = drv))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ, size = class))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ), color = "green")
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ), color = "green", shape = "triangle")
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ), color = "green", shape = "square")
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ, size = cty))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ, color = cty))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ, shape = cty))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ, shape = displ))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ, color = displ))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ, color = displ<5))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ, color = displ<5)) + facet_wrap(~class)
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ, color = displ<5)) + facet_wrap(~cty)
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ, color = displ<5)) + facet_grid(cty~class)
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ, color = displ<5)) + facet_grid(drv~class)
unique(mpg$drv)
ggplot(data = mpg) + geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ)) + facet_grid(drv~.)
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ)) + facet_grid(.~cyl)
?facet_wrap
?facet_grid
ggplot(data = mpg) + geom_smooth(mapping = aes(y = hwy,x = displ)) + facet_grid(.~cyl)
ggplot(data = mpg) + geom_smooth(mapping = aes(y = hwy,x = displ))
ggplot(data = mpg) + geom_smooth(mapping = aes(y = hwy,x = displ, linetype = drv))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ)) + geom_smooth(mapping = aes(y = hwy, x = displ))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ)) + geom_smooth(mapping = aes(y = hwy, x = displ, linetype = drv))
ggplot(data = mpg) + geom_point(mapping = aes(y = hwy,x = displ)) + geom_smooth(mapping = aes(y = hwy, x = displ, color = drv))
ggplot(data = mpg, mapping = aes(y = hwy, x = displ)) + geom_point()
ggplot(data = mpg, mapping = aes(y = hwy, x = displ)) + geom_point() + geom_smooth()
ggplot(data = mpg, mapping = aes(y = hwy, x = displ)) + geom_point(color = drv) + geom_smooth()
ggplot(data = mpg, mapping = aes(y = hwy, x = displ)) + geom_point(mapping = aes(color = drv)) + geom_smooth()
ggplot(data = mpg, mapping = aes(y = hwy, x = displ)) + geom_point(mapping = aes(color = drv)) + geom_smooth(se = FALSE)
?geom
??geom
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv))+ geom_point()+
geom_smooth(se = F)
library(tidyverse)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv))+ geom_point()+
geom_smooth(se = F)
ggplot(data = mpg) + geo_bar(mapping = aes(x = drv))
ggplot(data = mpg) + geom_bar(mapping = aes(x = drv))
ggplot(data = mpg) + geom_col(mapping = aes(x = drv))
ggplot(data = mpg) + geom_col(mapping = aes(y = drv))
examples(geom_col)
example(geom_col)
?diamonds
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(
data = diamonds,
mapping = aes(x = cut, fill = clarity)
) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point(position = jitter)
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point(position = "jitter")
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_jitter()
ggplot(data = mpg, mapping = aes(x = cty)) + geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = cut)) + geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = cut, y = clarity)) + geom_count()
a <- 3
this_is_a_really_long_name <- 2.5
this_is_a_really_long_name <- 3.5
library(tidyverse)
ggplot(dota = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(dota = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
filter(diamond, carat > 3)
filter(diamonds, carat > 3)
?near
library(tidyverse)
library(nycflights13)
filter(nycflights13, date > 15 | month %in% c(11,12))
filter(flights, date > 15 | month %in% c(11,12))
?flights
view(flights)
view(flights)
filter(flights, day > 15 | month %in% c(11,12))
names(flights)
filter(flights, arr_delay >= 2)
filter(flights, dest == "HOUSTON")
filter(flights, dest == "IAH")
type(flights$carrier)
typeof(flights$carrier)
filter(flights, carrier %in% c("UA","DL","AA"))
filter(flights,dep_time <= 6)
NA*0
NA | T
NA & F
NA ^ 0
filter(flights, between(day,13, 15))
arrange(flights, day)
arrange(flights, desc(day))
arrange(flights, desc(year),desc(day))
arrange(flights, desc(day), desc(year))
arrange(flights, desc(day), desc(month))
x <- data.frame(a = c(1,2,3),b = c(4,5,6))
x
x <- data.frame(a = c(1,2,3,1,2,3),b = c(4,5,6,6,5,4))
x
arrange(x,a,b)
arrange(x,b,a)
arrange(x,b,desc(a))
select(flight, year:dep_delay)
select(flights, year:dep_delay)
select(flights, starts_with("a")
)
select(flights, carrier, everything())
mutate(flights, year = year /2013)
transmute(flights, year = year /2013)
select(flights, ur = year)
2/3
2%/%3
lead(1:10)
lag(1:10)
desc(1:10)
ASC(1:10)
asc(1:10)
?flights
library(tidyverse)
library(nycflights13)
?flights
not_can <- flights %>%
filter(!is.na(arr_delay), !is.na(dep_delay))
not_can
not_can %>% group_by(tailnum) %>% summarize(n())
not_can %>% count(tailnum)
not_can %>% group_by(tailnum) %>% summarize(sum(dist))
not_can %>% group_by(tailnum) %>% summarize(mean(dist))
not_can %>% group_by(tailnum) %>% summarize(mean(distance))
not_can %>% group_by(tailnum) %>% summarize(sum(distance))
gg = not_can %>% group_by(tailnum)
typeof(gg)
class(gg)
class(flights)
a = not_can %>% group_by(year,month,day)
a
summarize(a,  sum(distance))
summarize(a,  d = sum(distance)) %>% summarise(sum(d))
summarize(a,  d = sum(distance)) %>% summarise(sum(d)) %>% summarise(n())
a
typeof(a)
class(a)
ungroup(a)
class(a)
class(ungroup(a))
d <- data.frame(a = c(1,1,1,2,2,2), b = 1:6)
d
d%>% group_by(a) %>% filter(b%%2 == 0)
d%>% group_by(a) %>% mutate(b = b%%2)
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut))
library(tidyverse)
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut))
diamond %>% count(cut)
diamonds %>% count(cut)
find(diamonds)
find('diamonds')
ggplot(data = diamonds ) + geom_histogram(mapping = aes(x = carat))
ggplot(data = diamonds ) + geom_histogram(mapping = aes(x = carat),binwidth = 0.5)
ggplot(data = diamonds ) + geom_histogram(mapping = aes(x = carat),binwidth = 1)
p = ggplot(data = diamonds ) + geom_histogram(mapping = aes(x = carat),binwidth = 1)
ggplot_build(p)$data[[1]]$xmin
p = ggplot(data = diamonds ) + geom_histogram(mapping = aes(x = carat),binwidth = 0.5)
ggplot_build(p)$data[[1]]$xmin
ggplot(data = faithful, mapping = aes(x = eruptions)) +
geom_histogram(binwidth = 0.25)
p = ggplot(data = faithful, mapping = aes(x = eruptions)) +
geom_histogram(binwidth = 0.25)
ggplot_build(p)$data[[1]]$xmin
nycflights13::flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min / 60
) %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(
mapping = aes(color = cancelled),
binwidth = 1/4
)
?flights
ggplot(data = diamonds) +
geom_count(mapping = aes(x = cut, y = color))
?reorder
x = reorder(c(1,2,3),c(3,2,1))
x
install.packages("hexbin")
install.packages("hexbin")
library(tidyverse)
ggplot(data = diamonds) + geom_bin2d(mapping = aes(x = carat, y = price))
ggplot(data = diamonds) + geom_hex(mapping = aes(x = carat, y = price))
ggplot(data = diamonds) + geom_boxplot(mapping = aes(x = carat, y = cut_width(price,0.1)))
ggplot(data = diamonds) + geom_boxplot(mapping = aes(x = carat, y = price, group =  cut_width(price,0.1)))
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
library(tidyverse)
tribble(
~x, ~y, ~z
1 , 2 , 3
tribble(
~x, ~y, ~z
1 , 2 , 3,
tribble(
~x, ~y, ~z,
1,2,3
4,5,6)
tribble(
~x, ~y, ~z,
1,2,3,
4,5,6)
view(diamonds)
b = data.frame("ab" = 1:4, "cd" = 3:6)
b[["a"]]
b$a
b$c
a = tibble()
a = tibble( a = 1:6, b = 2:7, c = 3:8)
a
class(a)
b
class(b)
x = parse_logical(c("T","F","*"),na = '*')
x
parse_number("123 24")
find("parse_date")
.x = 9
_x = 10
.x
x_f = 10
x_f
ls()
find(mpg)
library(tidyverse)
find(mpg)
find("mpg")
parse_integer("30%")
parse_number("30%")
?col_integer
?read_csv
library(TTR)
install.packages("TTR")
births <- scan("http://robjhyndman.com/tsdldata/data/nybirths.dat")
?ts
?SMA
??SMA
library(zoo)
library(quantmod)
library(quantmod)
install.packages("quantmod")
library(quantmod)
?getSymbols
library(ggplot2)
stock.data <- new.env()
library(ggplot2)
stock.data <- new.env()
tickers <- ('AAPL')
stock.data <- getSymbols(tickers, src = 'yahoo', from = '2000-01-01', env =
FALSE, auto.assign = F)
data <- stock.data$AAPL.Close
head(data)
names(mpg)
select(mpg, model,crv = drv)
library(tidyverse)
select(mpg, model,crv = drv)
mpg %>% drop(model)
mpg %>% drop('model')
?drop
library(tidyverse)
library(nycflights13)
flights2 <- flights %>%
select(year:day, hour, origin, dest, tailnum, carrier)
flights2
flights2 %>%
select(-origin, -dest) %>%
left_join(airlines, by = "carrier")
flights2 %>%
left_join(planes, by = "tailnum")
planes %>%
left_join(flights2, by = "tailnum")
flights2 %>%
left_join(airports, c("dest" = "faa"))
flights2 %>%
left_join(airports, by = c("dest" = "faa"))
library(tidyverse)
library(quantmod)
stock.data <- new.env()
tickers <- ('AAPL')
typeof(tickers)
stock.data <- getSymbols(tickers, src = 'yahoo', from = '2000-01-01', env =
FALSE, auto.assign = F)
view(stock.data)
data <- stock.data$AAPL.Close
head(data)
plot.data <- na.omit(data.frame(close_price = data))
names(plot.data) <- c("close_price")
ggplot(plot.data,aes(x = seq_along(close_price))) + geom_line(aes(y = close_price, color ="Close Price"))
data.ts <- as.ts(data)
class(data.ts)
class(data)
data.ts <- as.ts(data)
data.zoo <- as.zoo(data.ts)
x.data <- list()
for (j in 1:31){
var.name <- paste("x.lag.",j)
x.data[[var.name]] <- Lag(data.zoo,j)
}
final.data <- na.omit(data.frame(x.data, Y = data.zoo))
head(final.data)
train.perc = 0.8
train.indx = 1:as.integer(dim(final.data)[1] * train.perc)
train.data <- final.data[train.indx,]
test.data <- final.data[-train.indx ,]
train.x.data <- data.matrix(train.data[,-1])
train.y.data <- train.data[,1]
test.x.data <- data.matrix(test.data[,-1])
test.y.data <- test.data[,1]
install.packages("mxnet")
install.packages("https://s3.ca-central-1.amazonaws.com/jeremiedb/share/mxnet/CPU/mxnet.zip", repos = NULL)
install.packages("drat", repos="https://cran.rstudio.com")
install.packages("tensorflow")
library(tensorflow)
install_tensorflow()
Y
tf$constant("Hellow Tensorflow")
install_tensorflow()
library(tensorflow)
tf$constant("Hellow Tensorflow")
library(stringr)
library(tidyverse)
str_c(1:2,3:4)
str_c(1:2,3:4) = c
str_c(1:2,3:4) -> c
c
class(c)
typeof(c)
length(c)
"ac"
str_c(1:5)
str_view("Abcc", ".c.")
str_view("Abcc", ".c.") ->k
k
class(k)
print(k)
typeof(k)
names(k)
k[[x]]
k[["x"]]
k[["width"]]
str_view("x/c","\")
str_view("x/c","\\")
str_view("x\c","\\")
str_view("x\\c","\\")
str_view("x\\c","\\\")
x= "$^$"
x
str_view(x,"\\$\\^\\$")
str_view(c(x, "Dda"),"\\$\\^\\$")
str_view("1111111", "(\\d)\\1")
x = 1:6
dim(x) = 2:3
x
is.vector(x)
class(x)
length(x)
args(sum)
?args
x
dim(x) = NULL
x
is.vector(x)
names(x) = c("sa")
x
is.vector(x)
dim(x) = 1:3
class(x)
?seq_along
seq_along(rep("x",5))
libray(tidyverse)
library(tidyverse)
library(stringr)
words
length(words)
paste(1:3,4:6,sep = "s")
paste(1:5,collapse = ";")
class(sentences)
1:3 %>% rep(5)
str_locate(c("JOh","jay","Joy"), "J|j")
z = factor(c('a','b','c'), levels = letters[1:3])
z
library(forcats)
fct_reorder(z,3:1)
find('fct_reorder')
typeof("sas")
z
z
typeof(z)
class(z)
class(z) = NULL
z
library(mxnet)
library(tidverse)
library(tidyverse)
ggplot(mpg) + geom_point(aes(trans,cyl))
ymd("2013/07/19")
library(lubridate)
ymd("2013/07/19")
d = ymd()
ymd("2013/07/19") -> d
typeof(d)
class(d)
unclass(d)
1:6[c(T,F)]
(1:6)[c(T,F)]
library(tidyverse)
library(tidyverse)
pkgs <- c("factoextra",  "NbClust")
install.packages(pkgs)
install.packages(c('conquer', 'pbkrtest', 'quantreg', ))
install.packages(c('conquer', 'pbkrtest', 'quantreg'))
install.packages("lme4")
install.packages("car")
install.apckages('conquer')
library(devtools)
install_github(XiaoouPan/conquer)
install_github('XiaoouPan/conquer')
install.packages("car")
pkgs <- c("factoextra",  "NbClust")
install.packages(pkgs)
library(factoextra)
library(NbClust)
setwd("~/Projects/Heart_Disease_Patient_Clustering")
source('~/Projects/Heart_Disease_Patient_Clustering/k_means.R')
fviz_nbclust(heart_disease
, kmeans, method = "wss") +
geom_vline(xintercept = 4, linetype = 2)+
labs(subtitle = "Elbow method")
fviz_nbclust(heart_disease, kmeans, method = "silhouette")+
labs(subtitle = "Silhouette method")
fviz_nbclust(heart_disease, kmeans, nstart = 25,  method = "gap_stat", nboot = 50)+
labs(subtitle = "Gap statistic method")
fviz_nbclust(heart_disease
, kmeans, method = "wss") +
geom_vline(xintercept = 4, linetype = 2)+
labs(subtitle = "Elbow method")
fviz_nbclust(heart_disease, kmeans, method = "silhouette")+
labs(subtitle = "Silhouette method")
fviz_nbclust(heart_disease
, kmeans, method = "wss") +
geom_vline(xintercept = 4, linetype = 2)+
labs(subtitle = "Elbow method")
fviz_nbclust(heart_disease, kmeans, method = "silhouette")+
labs(subtitle = "Silhouette method")
fviz_nbclust(heart_disease, kmeans, method = "silhouette")+
labs(subtitle = "Silhouette method")
fviz_nbclust(heart_disease, kmeans, nstart = 25,  method = "gap_stat", nboot = 50)+
labs(subtitle = "Gap statistic method")
fviz_nbclust(heart_disease, kmeans, method = "silhouette")+
labs(subtitle = "Silhouette method")
fviz_nbclust(heart_disease
, kmeans, method = "wss") +
geom_vline(xintercept = 4, linetype = 2)+
labs(subtitle = "Elbow method")
source('~/Projects/Heart_Disease_Patient_Clustering/k_means.R')
source('~/Projects/Heart_Disease_Patient_Clustering/k_means.R')
source('~/Projects/Heart_Disease_Patient_Clustering/k_means.R')
source('~/Projects/Heart_Disease_Patient_Clustering/hierachical.R')
